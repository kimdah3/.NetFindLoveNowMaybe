@model FindLoveNowMaybe.Models.RegistrationModel
@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    @Html.DisplayNameFor(x => x.FirstName);
    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.FirstName)

    <br/>

    @Html.DisplayNameFor(x => x.LastName);
    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.LastName)

    <br/>

    @Html.DisplayNameFor(x => x.UserName);
    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.UserName)

    <br />

    @Html.LabelFor(x => x.Password, new {@class = "form-control"})
    @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Password)

    <br />

    @Html.LabelFor(x => x.PasswordMatch, new {@style = "font-family:oswald"})
    @Html.PasswordFor(x => x.PasswordMatch, new { @class
    = "form-control" })
    @Html.ValidationMessageFor(x => x.PasswordMatch)

    <br />

    @Html.DisplayNameFor(x => x.Description)
    @Html.TextAreaFor(x => x.Description, new {@class = "form-control"})
    @Html.ValidationMessageFor(x => x.Description)

    <br/>

    @Html.DisplayNameFor(x => x.Age);
    @Html.TextBoxFor(x => x.Age, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Age)

    <br/>

    @Html.DisplayNameFor(x => x.Picture);
    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Picture)

    <br/>

    @Html.DisplayNameFor(x => x.Sex);
    @Html.DropDownListFor(x => x.Sex, new List<SelectListItem>
        {
            new SelectListItem {Text = "Man", Value = "true"},
            new SelectListItem {Text = "Kvinna", Value = "false"}
        }, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Sex)

    <br/>

    @Html.DisplayNameFor(x => x.InterestedMen);
    @Html.DropDownListFor(x => x.InterestedMen, new List<SelectListItem>
        {
            new SelectListItem {Text = "Yes", Value = "true"},
            new SelectListItem {Text = "No", Value = "false"}
        }, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.InterestedMen)

    <br/>

    @Html.DisplayNameFor(x => x.InterestedWomen);
    @Html.DropDownListFor(x => x.InterestedWomen, new List<SelectListItem>
        {
            new SelectListItem {Text = "Yes", Value = "true"},
            new SelectListItem {Text = "No", Value = "false"}
        }, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.InterestedWomen)

    <br />
    
    <input class="btn btn-info" type="submit" value="Register" />
    @*<button type="submit" class="btn btn-info">Submit</button>*@
}











<!--
<div class="container" id="hejdå">
    <form class="form-inline" role="form">
        <div class="form-group">
            <label class="sr-only" for="email">Email address:</label>
            <input type="email" class="form-control" id="email">
        </div>
        <div class="form-group">
            <label class="sr-only" for="pwd">Password:</label>
            <input type="password" class="form-control" id="pwd">
        </div>
        <div class="checkbox">
            <label><input type="checkbox"> Remember me</label>
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
    </form>
</div>
-->
